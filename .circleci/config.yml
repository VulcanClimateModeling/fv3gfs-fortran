version: 2.1
orbs:
  gcp-gcr: circleci/gcp-gcr@0.6.1
jobs:
  build_default:
    machine:
      docker_layer_caching: true
    environment:
      COMPILED_IMAGE: us.gcr.io/vcm-ml/fv3gfs-compiled-default:latest
      COMPILED_TAG_NAME: default
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update
      - run: make build
      - run: 
          name: "Install Python test dependencies"
          command: |
            pyenv versions
            pyenv global 3.5.2
            pip install --upgrade setuptools
            pip install -r requirements.txt
            pip install git+https://github.com/VulcanClimateModeling/fv3config.git
      # download inputdata
      - restore_cache:
          keys:
            - v1.1-inputdata-{{ checksum "download_inputdata.sh" }}
            # fallback to using the latest cache if no exact match is found
            - v1.1-inputdata-
      - run: bash download_inputdata.sh
      - save_cache:
          paths:
            - ./fv3gfs-data-docker_2020-01-13.tar.gz
          key: v1.1-inputdata-{{ checksum "download_inputdata.sh" }}
      # tests
      - run: python3 tests/pytest/download_reference.py gs://vcm-fv3gfs-data/regression_reference
      - run: pytest tests/pytest
  build_32:
    machine:
      docker_layer_caching: true
    environment:
      COMPILED_IMAGE: us.gcr.io/vcm-ml/fv3gfs-compiled-32bit:latest
      COMPILED_TAG_NAME: 32bit
      COMPILE_OPTION: 32BIT=Y
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update
      - run: make build
      # download inputdata
      - restore_cache:
          keys:
            - v1.1-inputdata-{{ checksum "download_inputdata.sh" }}
            # fallback to using the latest cache if no exact match is found
            - v1.1-inputdata-
      - run: bash download_inputdata.sh
      - save_cache:
          paths:
            - ./fv3gfs-data-docker_2020-01-13.tar.gz
          key: v1.1-inputdata-{{ checksum "download_inputdata.sh" }}
      # tests
      - run: bash tests/test_output_netcdfs_identical.sh
workflows:
  version: 2
  build:
    jobs:
      - build_default
