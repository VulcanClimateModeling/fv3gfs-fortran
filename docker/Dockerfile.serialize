
FROM us.gcr.io/vcm-ml/fv3gfs-environment:latest as fv3gfs-environment
# install dependencies for serialbox
ENV DEBIAN_FRONTEND=noninteractive
# set TZ
ENV TZ=US/Pacific
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt-get update && apt-get install -y \
    apt-utils \
    build-essential \
    aptitude \
    cmake \
    cmake-curses-gui \
    libssl-dev \
    libboost-all-dev \ 
    clang \
    clang-format \
    clang-tidy \
    python3-numpy \
    python3-nose \
    python3-sphinx 

# RUN update-alternatives --set mpi /usr/bin/mpicc.mpich

# install serialbox2 from source
COPY serialbox2 serialbox2
RUN cd serialbox2 && \
    mkdir build && \
    cd build && \
    cmake -DSERIALBOX_USE_NETCDF=ON -DSERIALBOX_ENABLE_FORTRAN=ON \
      -DSERIALBOX_TESTING=ON  ../ && \
    make -j4 && \
    make test && \
    make install

##
## Build /Serialize/FV3 executable
##---------------------------------------------------------------------------------
FROM fv3gfs-environment AS fv3gfs-compiled
# copied from Dockerfile
ENV FMS_DIR=/FMS
ENV ESMF_DIR=/usr/local/esmf
ENV ESMF_INC="-I/usr/local/esmf/include -I${ESMF_DIR}/mod/modO3/Linux.gfortran.64.mpiuni.default/"
ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${ESMF_DIR}/lib/libO3/Linux.gfortran.64.mpiuni.default/:${FMS_DIR}/libFMS/.libs/:/serialbox2/install/lib

COPY --from=us.gcr.io/vcm-ml/fv3gfs-compiled:default /FV3/ /FV3
COPY --from=us.gcr.io/vcm-ml/fv3gfs-compiled:default /FMS/ $FMS_DIR
COPY --from=us.gcr.io/vcm-ml/fv3gfs-compiled:default ${ESMF_DIR} ${ESMF_DIR}
COPY --from=us.gcr.io/vcm-ml/fv3gfs-compiled:default /stochastic_physics /stochastic_physics 
# build model with serialization
RUN cd /FV3 && make serialize

